<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <CurrentIssues>
    <ID>ClassNaming:SchemaTest.kt$RealmA_V1 : RealmObject</ID>
    <ID>ClassNaming:SchemaTest.kt$RealmA_V2 : RealmObject</ID>
    <ID>ClassNaming:SchemaTest.kt$RealmA_V3 : RealmObject</ID>
    <ID>ClassNaming:SchemaTest.kt$RealmB_V1 : RealmObject</ID>
    <ID>ComplexCondition:LoginWithHealthCardScreen.kt$(can.length == it || it == 5 &amp;&amp; can.length == 6) &amp;&amp; isFocussed</ID>
    <ID>ComplexCondition:LoginWithHealthCardScreen.kt$triggerAuth &amp;&amp; state.firstVisibleItemIndex == 4 &amp;&amp; cardAccessNumber.isNotBlank() &amp;&amp; personalIdentificationNumber.isNotBlank()</ID>
    <ID>ComplexCondition:Workarounds.kt$Workarounds$osName == "Mac OS X" &amp;&amp; majorJavaVersion &lt;= 16 &amp;&amp; (majorOsVersion == 11 || majorOsVersion == 12)</ID>
    <ID>EmptyDefaultConstructor:PrefixedLogger.kt$NapierLogger$()</ID>
    <ID>EmptyFunctionBlock:Main.kt$LogHandler${ }</ID>
    <ID>EmptyFunctionBlock:VideoContent.kt$&lt;no name provided>${}</ID>
    <ID>FunctionParameterNaming:IdpService.kt$IdpService$@Query("redirect_uri") redirect_uri: String = REDIRECT_URI</ID>
    <ID>ImplicitDefaultLocale:ApplicationIdentifier.kt$ApplicationIdentifier$String.format( "Application File Identifier length out of valid range [%d,%d]", AID_MIN_LENGTH, AID_MAX_LENGTH )</ID>
    <ID>ImplicitDefaultLocale:CardKey.kt$CardKey$String.format( "Key ID out of range [%d,%d]", MIN_KEY_ID, MAX_KEY_ID )</ID>
    <ID>ImplicitDefaultLocale:ShortFileIdentifier.kt$ShortFileIdentifier$String.format( "Short File Identifier out of valid range [%d,%d]", MIN_VALUE, MAX_VALUE )</ID>
    <ID>LargeClass:StringResource.kt$Strings</ID>
    <ID>LongMethod:AndroidStringResourceGeneratorTask.kt$AndroidStringResourceGeneratorTask$@OptIn(ExperimentalXmlUtilApi::class, ExperimentalStdlibApi::class) @TaskAction fun generateStringResources()</ID>
    <ID>LongMethod:CardWallComponents.kt$@Composable fun CardWallScreen( mainNavController: NavController, onResumeCardWall: () -> Unit, profileId: ProfileIdentifier )</ID>
    <ID>LongMethod:KBVCodeMapping.kt$fun Strings.codeToDosageFormMapping()</ID>
    <ID>LongMethod:LoginWithHealthCardScreen.kt$@OptIn( ExperimentalMaterialApi::class, ExperimentalAnimationApi::class ) @Composable fun LoginWithHealthCard( viewModel: LoginWithHealthCardViewModel, onFinished: () -> Unit, onClose: () -> Unit )</ID>
    <ID>LongMethod:Main.kt$fun main()</ID>
    <ID>LongMethod:SyncedTaskEntityV1Test.kt$SyncedTaskEntityV1Test$@Test fun `cascading delete`()</ID>
    <ID>MagicNumber:Animations.kt$1</ID>
    <ID>MagicNumber:Animations.kt$3</ID>
    <ID>MagicNumber:Apdu.kt$0xFF</ID>
    <ID>MagicNumber:Apdu.kt$8</ID>
    <ID>MagicNumber:Apdu.kt$CommandApdu.Companion$0xFF</ID>
    <ID>MagicNumber:Apdu.kt$CommandApdu.Companion$255</ID>
    <ID>MagicNumber:Apdu.kt$CommandApdu.Companion$5</ID>
    <ID>MagicNumber:Apdu.kt$CommandApdu.Companion$65535</ID>
    <ID>MagicNumber:Apdu.kt$CommandApdu.Companion$7</ID>
    <ID>MagicNumber:AuthenticationUseCase.kt$AuthenticationUseCase$1000</ID>
    <ID>MagicNumber:BasicData.kt$3</ID>
    <ID>MagicNumber:BasicData.kt$4</ID>
    <ID>MagicNumber:BasicData.kt$IdpNonce.Companion$32</ID>
    <ID>MagicNumber:CardWallAuthDialog.kt$1000</ID>
    <ID>MagicNumber:CardWallAuthDialog.kt$5000</ID>
    <ID>MagicNumber:CardWallComponents.kt$6</ID>
    <ID>MagicNumber:CardWallComponents.kt$8</ID>
    <ID>MagicNumber:CardWallNfcInstructionScreen.kt$1.5f</ID>
    <ID>MagicNumber:CardWallNfcInstructionScreen.kt$3</ID>
    <ID>MagicNumber:CardWallNfcInstructionScreen.kt$6</ID>
    <ID>MagicNumber:CertUtils.kt$3</ID>
    <ID>MagicNumber:ClientCrypto.kt$3</ID>
    <ID>MagicNumber:ClientCrypto.kt$VauChannelSpec$3</ID>
    <ID>MagicNumber:ClientCrypto.kt$VauChannelSpec$4</ID>
    <ID>MagicNumber:ClientCrypto.kt$VauChannelSpec$5</ID>
    <ID>MagicNumber:ClientCrypto.kt$VauChannelSpec$8</ID>
    <ID>MagicNumber:Common.kt$1</ID>
    <ID>MagicNumber:Crypto.kt$AesGcm$8</ID>
    <ID>MagicNumber:Crypto.kt$Ecies$16</ID>
    <ID>MagicNumber:Crypto.kt$Ecies$32</ID>
    <ID>MagicNumber:CryptoUtils.kt$256</ID>
    <ID>MagicNumber:DebugSettingsViewModel.kt$DebugSettingsViewModel$48</ID>
    <ID>MagicNumber:DebugSettingsViewModel.kt$DebugSettingsViewModel$64</ID>
    <ID>MagicNumber:Dialog.kt$0.78f</ID>
    <ID>MagicNumber:EcdsaUsingShaAlgorithmExtending.kt$EcdsaUsingShaAlgorithmExtending.EcdsaBP256R1UsingSha256$64</ID>
    <ID>MagicNumber:EcdsaUsingShaAlgorithmExtending.kt$EcdsaUsingShaAlgorithmExtending.EcdsaBP384R1UsingSha384$64</ID>
    <ID>MagicNumber:EcdsaUsingShaAlgorithmExtending.kt$EcdsaUsingShaAlgorithmExtending.EcdsaBP512R1UsingSha512$64</ID>
    <ID>MagicNumber:FileIdentifier.kt$FileIdentifier$0x011C</ID>
    <ID>MagicNumber:FileIdentifier.kt$FileIdentifier$0x1000</ID>
    <ID>MagicNumber:FileIdentifier.kt$FileIdentifier$0x3FFF</ID>
    <ID>MagicNumber:FileIdentifier.kt$FileIdentifier$0xFEFF</ID>
    <ID>MagicNumber:GeneralAuthenticateCommand.kt$28</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$16</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$8</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$HealthCardVersion2.Companion$3</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$HealthCardVersion2.Companion$4</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$HealthCardVersion2.Companion$5</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$HealthCardVersion2.Companion$6</ID>
    <ID>MagicNumber:HealthCardVersion2.kt$HealthCardVersion2.Companion$7</ID>
    <ID>MagicNumber:Hints.kt$1</ID>
    <ID>MagicNumber:Hints.kt$2000</ID>
    <ID>MagicNumber:IdpAlternateAuthenticationUseCase.kt$IdpAlternateAuthenticationUseCase$1000</ID>
    <ID>MagicNumber:IdpAlternateAuthenticationUseCase.kt$IdpAlternateAuthenticationUseCase$32</ID>
    <ID>MagicNumber:IdpBasicUseCase.kt$3</ID>
    <ID>MagicNumber:IdpBasicUseCase.kt$4</ID>
    <ID>MagicNumber:IdpBasicUseCase.kt$IdpBasicUseCase$60</ID>
    <ID>MagicNumber:IdpBasicUseCase.kt$IdpNonce.Companion$32</ID>
    <ID>MagicNumber:IdpUseCase.kt$IdpUseCase$400</ID>
    <ID>MagicNumber:IdpUseCase.kt$IdpUseCase$401</ID>
    <ID>MagicNumber:IdpUseCase.kt$IdpUseCase$403</ID>
    <ID>MagicNumber:JWTExtensions.kt$64</ID>
    <ID>MagicNumber:LoginWithHealthCardScreen.kt$1000</ID>
    <ID>MagicNumber:LoginWithHealthCardScreen.kt$3</ID>
    <ID>MagicNumber:LoginWithHealthCardScreen.kt$4</ID>
    <ID>MagicNumber:LoginWithHealthCardScreen.kt$5</ID>
    <ID>MagicNumber:LoginWithHealthCardScreen.kt$6</ID>
    <ID>MagicNumber:LoginWithHealthCardViewModel.kt$LoginWithHealthCardViewModel$1000</ID>
    <ID>MagicNumber:LoginWithHealthCardViewModel.kt$LoginWithHealthCardViewModel$2000</ID>
    <ID>MagicNumber:Main.kt$0.1f</ID>
    <ID>MagicNumber:Main.kt$1.5f</ID>
    <ID>MagicNumber:MainScreen.kt$0xff</ID>
    <ID>MagicNumber:MainScreen.kt$4</ID>
    <ID>MagicNumber:ManageSecurityEnvironmentCommand.kt$3</ID>
    <ID>MagicNumber:ManageSecurityEnvironmentCommand.kt$4</ID>
    <ID>MagicNumber:OnboardingComponents.kt$9</ID>
    <ID>MagicNumber:OverlayPopup.kt$0.5f</ID>
    <ID>MagicNumber:OverlayPopup.kt$0.7f</ID>
    <ID>MagicNumber:OverlayPopup.kt$15f</ID>
    <ID>MagicNumber:PairedDevices.kt$0.33f</ID>
    <ID>MagicNumber:PasswordScreen.kt$0.05f</ID>
    <ID>MagicNumber:PasswordScreen.kt$0.1f</ID>
    <ID>MagicNumber:PasswordScreen.kt$0.3f</ID>
    <ID>MagicNumber:PasswordScreen.kt$0.6f</ID>
    <ID>MagicNumber:PasswordScreen.kt$3</ID>
    <ID>MagicNumber:PasswordScreen.kt$4</ID>
    <ID>MagicNumber:PharmacySearchModel.kt$Location$180.0</ID>
    <ID>MagicNumber:ProtocolUseCase.kt$ProtocolUseCase$50</ID>
    <ID>MagicNumber:QueryUtils.kt$100</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$0.4f</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$0.6f</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$1</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$100</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$1000</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$100L</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$1024</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$200</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$3</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$300</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$300L</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$4</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$5</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$6</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$7</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$768</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$8</ID>
    <ID>MagicNumber:ScanScreenComponent.kt$800</ID>
    <ID>MagicNumber:Schema.kt$1</ID>
    <ID>MagicNumber:SecureMessaging.kt$SecureMessaging$0xFF</ID>
    <ID>MagicNumber:SecureMessaging.kt$SecureMessaging$1</ID>
    <ID>MagicNumber:SecureMessaging.kt$SecureMessaging$255</ID>
    <ID>MagicNumber:SecureMessaging.kt$SecureMessaging$3</ID>
    <ID>MagicNumber:SettingsData.kt$SettingsData.AuthenticationMode.Password$32</ID>
    <ID>MagicNumber:TextUtil.kt$0x1F600</ID>
    <ID>MagicNumber:TextUtil.kt$0xE007F</ID>
    <ID>MagicNumber:Translatable.kt$Plurals$11</ID>
    <ID>MagicNumber:Translatable.kt$Plurals$3</ID>
    <ID>MagicNumber:Translatable.kt$Plurals$4</ID>
    <ID>MagicNumber:Translatable.kt$Plurals$99</ID>
    <ID>MagicNumber:TrustedChannelPaceKeyExchange.kt$3</ID>
    <ID>MagicNumber:TrustedChannelPaceKeyExchange.kt$5</ID>
    <ID>MagicNumber:TruststoreUseCase.kt$TrustedTruststore.Companion$3</ID>
    <ID>MagicNumber:TwoDCodeProcessor.kt$126</ID>
    <ID>MagicNumber:TwoDCodeProcessor.kt$32</ID>
    <ID>MagicNumber:TwoDCodeProcessor.kt$TwoDCodeProcessor$270</ID>
    <ID>MagicNumber:TwoDCodeProcessor.kt$TwoDCodeProcessor$90</ID>
    <ID>MagicNumber:UnlockEgkDialog.kt$1000</ID>
    <ID>MagicNumber:UnlockEgkDialog.kt$5000</ID>
    <ID>MagicNumber:Utils.kt$0xFF</ID>
    <ID>MagicNumber:Utils.kt$10</ID>
    <ID>MagicNumber:Utils.kt$15</ID>
    <ID>MagicNumber:Utils.kt$16</ID>
    <ID>MagicNumber:Utils.kt$48</ID>
    <ID>MagicNumber:Utils.kt$9</ID>
    <ID>MagicNumber:Utils.kt$97</ID>
    <ID>MagicNumber:WebViewScreen.kt$100</ID>
    <ID>MagicNumber:Workarounds.kt$Workarounds$11</ID>
    <ID>MagicNumber:Workarounds.kt$Workarounds$12</ID>
    <ID>MagicNumber:Workarounds.kt$Workarounds$16</ID>
    <ID>MandatoryBracesIfStatements:EllipticCurvesExtending.kt$EllipticCurvesExtending$else</ID>
    <ID>MandatoryBracesIfStatements:LoginWithHealthCardScreen.kt$if</ID>
    <ID>MayBeConst:TestData.kt$TestCertificates.OCSP1$val CertToCheckSerialNumber = "1034953504625805" // IDP 1</ID>
    <ID>MayBeConst:TestData.kt$TestCertificates.OCSP1.SignerCert$val Base64 = "MIICmjCCAkCgAwIBAgIHA602RERCazAKBggqhkjOPQQDAjCBhDELMAkGA1UEBhMCREUxHzAdBgNVBAoMFmdlbWF0aWsgR21iSCBOT1QtVkFMSUQxMjAwBgNVBAsMKUtvbXBvbmVudGVuLUNBIGRlciBUZWxlbWF0aWtpbmZyYXN0cnVrdHVyMSAwHgYDVQQDDBdHRU0uS09NUC1DQTEwIFRFU1QtT05MWTAeFw0yMDA1MDYwMDAwMDBaFw0yMzA1MDYyMzU5NTlaMFcxCzAJBgNVBAYTAkRFMRowGAYDVQQKDBFnZW1hdGlrIE5PVC1WQUxJRDEsMCoGA1UEAwwjT0NTUCBTaWduZXIgS29tcC1DQTEwIGVjYyBURVNULU9OTFkwWjAUBgcqhkjOPQIBBgkrJAMDAggBAQcDQgAEGwfkaELN0cr5DfqP1bNsWZS2XiuH6reLPZLHBSLkyFp/SzTKvNDdm7nKlp6Norg1z1njhyapRraaCzRS6VreD6OBxzCBxDAfBgNVHSMEGDAWgBQo8Pjmqch3zENF25qu1zqDrA4PqDAOBgNVHQ8BAf8EBAMCBkAwFQYDVR0gBA4wDDAKBggqghQATASBIzATBgNVHSUEDDAKBggrBgEFBQcDCTAMBgNVHRMBAf8EAjAAMDgGCCsGAQUFBwEBBCwwKjAoBggrBgEFBQcwAYYcaHR0cDovL2VoY2EuZ2VtYXRpay5kZS9vY3NwLzAdBgNVHQ4EFgQUHKqJlrsbnD6bAIyF2WScrHtUmeIwCgYIKoZIzj0EAwIDSAAwRQIhAIkd0/4EtDLRRnb0B8mgmvlxepYrLKX/lkVGoXy0D64OAiAkOCmXOwGJExZxxRm4diJ/GPzZI4ecAnaVqnikYAQVCQ=="</ID>
    <ID>MayBeConst:TestData.kt$TestCertificates.OCSP2$val CertToCheckSerialNumber = "487275465566779" // IDP 2</ID>
    <ID>MayBeConst:TestData.kt$TestCertificates.OCSP3$val CertToCheckSerialNumber = "347632017809591" // VAU</ID>
    <ID>MemberNameEqualsClassName:Navigation.kt$Route$val route = arguments.fold(Uri.Builder().path(path)) { uri, param -> uri.appendQueryParameter(param.name, "{${param.name}}") }.build().toString()</ID>
    <ID>NestedBlockDepth:EntityUtils.kt$private suspend fun SequenceScope&lt;Deleteable>.flatten( currentObject: Cascading, currentDepth: Int, maxDepth: Int )</ID>
    <ID>NestedBlockDepth:LicenceRule.kt$LicenceRule$override fun visit( node: ASTNode, autoCorrect: Boolean, emit: (offset: Int, errorMessage: String, canBeAutoCorrected: Boolean) -> Unit )</ID>
    <ID>NestedBlockDepth:Utils.kt$fun ByteArray.contains(other: ByteArray): Boolean</ID>
    <ID>ReturnCount:TestResource.kt$TestResource$fun getParameter(parameterEnum: ParameterEnum): Any?</ID>
    <ID>ReturnCount:Utils.kt$fun ByteArray.contains(other: ByteArray): Boolean</ID>
    <ID>SpreadOperator:AndroidStringResourceGeneratorTask.kt$AndroidStringResourceGeneratorTask$( "%L to Plurals(${tr.items.toTemplateString()}),", primaryUniqueNamesWithId.getValue(tr.name), *tr.items.toArgArray() )</ID>
    <ID>SpreadOperator:AndroidStringResourceGeneratorTask.kt$AndroidStringResourceGeneratorTask$("val strings = mapOf($format)", *values)</ID>
    <ID>SpreadOperator:Common.kt$(id, *(args.map { AnnotatedString(it.toString()) }.toTypedArray()))</ID>
    <ID>SwallowedException:CertUtils.kt$e: Exception</ID>
    <ID>SwallowedException:IdpLocalDataSource.kt$IdpLocalDataSource$e: Exception</ID>
    <ID>SwallowedException:OCSPUtils.kt$e: Exception</ID>
    <ID>SwallowedException:SecureMessagingTest.kt$SecureMessagingTest$e: Exception</ID>
    <ID>SwallowedException:TruststoreUseCase.kt$TruststoreUseCase$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AuthenticationUseCase.kt$AuthenticationUseCase$e: Exception</ID>
    <ID>TooGenericExceptionCaught:CertUtils.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DebugLoadingButton.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DebugScreen.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DebugSettingsViewModel.kt$DebugSettingsViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EllipticCurvesExtending.kt$EllipticCurvesExtending$e: Exception</ID>
    <ID>TooGenericExceptionCaught:IdpBasicUseCase.kt$IdpBasicUseCase$e: Exception</ID>
    <ID>TooGenericExceptionCaught:IdpLocalDataSource.kt$IdpLocalDataSource$e: Exception</ID>
    <ID>TooGenericExceptionCaught:IdpUseCase.kt$IdpUseCase$e: Exception</ID>
    <ID>TooGenericExceptionCaught:LoginWithHealthCardViewModel.kt$LoginWithHealthCardViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:NetworkUtil.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:OCSPUtils.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:PharmacyMapper.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:QueryUtils.kt$t: Throwable</ID>
    <ID>TooGenericExceptionCaught:SafeApiCall.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:SharePrescriptionController.kt$SharePrescriptionController$e: IndexOutOfBoundsException</ID>
    <ID>TooGenericExceptionCaught:TruststoreUseCase.kt$TruststoreUseCase$e: Exception</ID>
    <ID>TooGenericExceptionCaught:TruststoreUseCase.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:TwoDCodeScanner.kt$TwoDCodeScanner$e: Exception</ID>
    <ID>TooGenericExceptionCaught:TwoDCodeValidator.kt$TwoDCodeValidator$e: Exception</ID>
    <ID>TooGenericExceptionCaught:VauChannelInterceptor.kt$VauChannelInterceptor$e: Exception</ID>
    <ID>TooManyFunctions:Common.kt$de.gematik.ti.erp.app.utils.compose.Common.kt</ID>
    <ID>TooManyFunctions:DebugSettingsViewModel.kt$DebugSettingsViewModel : ViewModel</ID>
    <ID>TooManyFunctions:EditProfileScreen.kt$de.gematik.ti.erp.app.profiles.ui.EditProfileScreen.kt</ID>
    <ID>TooManyFunctions:FhirMapper.kt$de.gematik.ti.erp.app.fhir.FhirMapper.kt</ID>
    <ID>TooManyFunctions:Hints.kt$de.gematik.ti.erp.app.utils.compose.Hints.kt</ID>
    <ID>TooManyFunctions:IdpAlternateAuthenticationUseCase.kt$IdpAlternateAuthenticationUseCase</ID>
    <ID>TooManyFunctions:IdpRepository.kt$IdpRepository</ID>
    <ID>TooManyFunctions:TemporalConverter.kt$de.gematik.ti.erp.app.utils.TemporalConverter.kt</ID>
    <ID>TopLevelPropertyNaming:ClientCrypto.kt$private const val byteSpace: Byte = 32</ID>
    <ID>TopLevelPropertyNaming:HeadersInterceptor.kt$private const val invalidAccessTokenHeader = "Www-Authenticate"</ID>
    <ID>TopLevelPropertyNaming:HeadersInterceptor.kt$private const val invalidAccessTokenValue = "Bearer realm='prescriptionserver.telematik', error='invalACCESS_TOKEN'"</ID>
    <ID>TopLevelPropertyNaming:IdpRemoteDataSource.kt$private const val defaultScope = "e-rezept openid"</ID>
    <ID>TopLevelPropertyNaming:IdpRemoteDataSource.kt$private const val pairingScope = "pairing openid"</ID>
    <ID>TopLevelPropertyNaming:PrescriptionDetailScreen.kt$private const val missingValue = "---"</ID>
    <ID>UnnecessaryAbstractClass:TestDB.kt$TestDB$TestDB</ID>
    <ID>UnusedPrivateMember:Hints.kt$innerPadding: PaddingValues</ID>
    <ID>UnusedPrivateMember:PrescriptionDetailScreen.kt$@Composable private fun Group( content: @Composable ColumnScope.() -> Unit )</ID>
    <ID>UnusedPrivateMember:PrescriptionDetailScreen.kt$navigation: Navigation</ID>
    <ID>UnusedPrivateMember:ResourceMapperVersion_1_0_2.kt$quantityFn: QuantityFn&lt;Quantity></ID>
    <ID>UnusedPrivateMember:ResourceMapperVersion_1_0_2.kt$ratioFn: RatioFn&lt;Ratio, Quantity></ID>
    <ID>UnusedPrivateMember:ResourceMapperVersion_1_1_0.kt$quantityFn: QuantityFn&lt;Quantity></ID>
    <ID>UnusedPrivateMember:ResourceMapperVersion_1_1_0.kt$ratioFn: RatioFn&lt;Ratio, Quantity></ID>
    <ID>UnusedPrivateMember:TestData.kt$sentOn: Instant?</ID>
    <ID>UnusedPrivateMember:TestResource.kt$TestResource.Companion$private const val ID_PIN_CH = 1</ID>
    <ID>UnusedPrivateMember:Theme.kt$private val LocalAppTypographyColors = staticCompositionLocalOf&lt;AppTypographyColors> { error("No AppTypographyColors provided") }</ID>
    <ID>UnusedPrivateMember:TruststoreUseCase.kt$private const val RCA_PREFIX = "GEM.RCA"</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x00, (dataSize shr 8).toByte(), dataSize.toByte())</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x00, 0x00, 0xFF.toByte())</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x00, 0x01, 0x00)</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, 0x00, 0xFF.toByte(), 0xFF.toByte())</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, 0xFF.toByte())</ID>
    <ID>VariableNaming:CommandApduTest.kt$CommandApduTest$val header_plus_lc = byteArrayOf(0x01, 0x02, 0x03, 0x04, cmdData.size.toByte())</ID>
    <ID>VariableNaming:FhirMapper.kt$FhirMapper$private val COMMUNICATION_TYPE_DISP_REQ = "https://gematik.de/fhir/StructureDefinition/ErxCommunicationDispReq"</ID>
    <ID>VariableNaming:FhirMapper.kt$FhirMapper$private val COMMUNICATION_TYPE_REPLY = "https://gematik.de/fhir/StructureDefinition/ErxCommunicationReply"</ID>
  </CurrentIssues>
</SmellBaseline>
